{
  "sqlc.yaml": {
    "prefix": "sqlcconfig",
    "body": [
      "version: \"2\"",
      "sql:",
      "  - engine: \"postgresql\"",
      "",
      "    # Database connection configuration.",
      "    # Replace 'user', 'pass', 'localhost:5432', and 'db' with your actual database credentials and host.",
      "    database:",
      "      url: \"postgres://user:pass@localhost:5432/db?sslmode=disable\"",
      "",
      "    # Path to your SQL schema definition files (e.g., CREATE TABLE, CREATE TYPE statements).",
      "    schema: \"schema/\"",
      "",
      "    # Path to your SQL query files (e.g., SELECT, INSERT, UPDATE, DELETE statements).",
      "    queries: \"query/\"",
      "",
      "    gen:",
      "",
      "      # Go language-specific code generation options.",
      "      go:",
      "        # The Go package name for the generated code.",
      "        package: \"${1:db}\"",
      "        # The output directory for the generated Go files.",
      "        out: \"${2:internal/db}\"",
      "        # The SQL driver package to use. 'pgx/v5' is recommended for PostgreSQL for its performance and feature set.",
      "        sql_package: \"pgx/v5\"",
      "",
      "        # Custom type overrides. These map specific database types to Go types.",
      "        # Useful for handling UUIDs, timestamps, JSONB, etc., with idiomatic Go types.",
      "        overrides:",
      "          - db_type: \"uuid\"",
      "            go_type: \"github.com/google/uuid.UUID\"",
      "          - db_type: \"timestamptz\"",
      "            go_type: \"time.Time\"",
      "",
      "      # Kotlin language-specific code generation options (uncomment and configure if needed).",
      "      # kotlin:",
      "      #   package: \"com.example.db\"",
      "      #   out: \"build/generated\""
    ],
    "description": "sqlc configuration template with enhanced explanations, common setup tips, and improved spacing for readability."
  }
}
